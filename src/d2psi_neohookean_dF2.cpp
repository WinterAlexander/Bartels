#ifdef SIM_STATIC_LIBRARY
# include<../include/d2psi_neohookean_dF2.h>
#endif

template<typename T>
T pow2(T x)
{
	return x * x;
}

template<typename HessianType, typename DefoType, typename ParameterType>
void sim::d2psi_neohookean_dF2(Eigen::MatrixBase <HessianType> &ddw,
                               const Eigen::MatrixBase <DefoType> &F,
                               const Eigen::MatrixBase <ParameterType> &params)
{

	typename DefoType::Scalar F1_1, F1_2, F1_3, F2_1, F2_2, F2_3, F3_1, F3_2, F3_3;

	typename DefoType::Scalar params1 = params(0);
	typename DefoType::Scalar params2 = params(1);

	F1_1 = F(0, 0);
	F1_2 = F(0, 1);
	F1_3 = F(0, 2);
	F2_1 = F(1, 0);
	F2_2 = F(1, 1);
	F2_3 = F(1, 2);
	F3_1 = F(2, 0);
	F3_2 = F(2, 1);
	F3_3 = F(2, 2);

	ddw(0, 0) = params1 * (pow2(F2_2 * F3_3 - F2_3 * F3_2) * 1.0 / pow2(
			F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
			F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) * 2.0 + 2.0) + params2 *
	                                                                pow2(
			                                                                F2_2 *
			                                                                F3_3 -
			                                                                F2_3 *
			                                                                F3_2) * 2.0;
	ddw(0, 1) = params2 * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_2 * F3_3 - F2_3 * F3_2) * -2.0 -
	            params1 * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(0, 2) = params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
	            params1 * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(0, 3) = params2 * (F2_1 * F3_3 - F2_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * -2.0 -
	            params1 * (F2_1 * F3_3 - F2_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(0, 4) = -params1 * ((F3_3 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                        (F1_1 * F3_3 - F1_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) +
	            params2 * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 -
	            F3_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(0, 5) = params1 * ((F2_3 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                       (F1_1 * F2_3 - F1_3 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) -
	            params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
	            F2_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(0, 6) = params2 * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
	            params1 * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(0, 7) = params1 * ((F3_2 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                       (F1_1 * F3_2 - F1_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) -
	            params2 * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
	            F3_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(0, 8) = -params1 * ((F2_2 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                        (F1_1 * F2_2 - F1_2 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) +
	            params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 -
	            F2_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(1, 0) = params2 * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_2 * F3_3 - F2_3 * F3_2) * -2.0 -
	            params1 * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(1, 1) = params1 * (pow2(F1_2 * F3_3 - F1_3 * F3_2) * 1.0 / pow2(
			F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
			F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) * 2.0 + 2.0) + params2 *
	                                                                pow2(
			                                                                F1_2 *
			                                                                F3_3 -
			                                                                F1_3 *
			                                                                F3_2) * 2.0;
	ddw(1, 2) = params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_2 * F3_3 - F1_3 * F3_2) * -2.0 -
	            params1 * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(1, 3) = params1 * ((F3_3 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                       (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) +
	            params2 * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
	            F3_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(1, 4) = params2 * (F1_1 * F3_3 - F1_3 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * -2.0 -
	            params1 * (F1_1 * F3_3 - F1_3 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(1, 5) = -params1 * ((F1_3 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                        (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) +
	            params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 -
	            F1_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(1, 6) = -params1 * ((F3_2 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                        (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) -
	            params2 * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 -
	            F3_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(1, 7) = params2 * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 +
	            params1 * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(1, 8) = params1 * ((F1_2 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                       (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) -
	            params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 +
	            F1_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(2, 0) = params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
	            params1 * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(2, 1) = params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_2 * F3_3 - F1_3 * F3_2) * -2.0 -
	            params1 * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(2, 2) = params1 * (pow2(F1_2 * F2_3 - F1_3 * F2_2) * 1.0 / pow2(
			F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
			F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) * 2.0 + 2.0) + params2 *
	                                                                pow2(
			                                                                F1_2 *
			                                                                F2_3 -
			                                                                F1_3 *
			                                                                F2_2) * 2.0;
	ddw(2, 3) = -params1 * ((F2_3 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                        (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) -
	            params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 -
	            F2_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(2, 4) = params1 * ((F1_3 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                       (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) +
	            params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_3 - F1_3 * F3_1) * 2.0 +
	            F1_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(2, 5) = params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * -2.0 -
	            params1 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(2, 6) = params1 * ((F2_2 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                       (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) +
	            params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
	            F2_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(2, 7) = -params1 * ((F1_2 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                        (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) -
	            params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_2 - F1_2 * F3_1) * 2.0 -
	            F1_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(2, 8) = params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 2.0 +
	            params1 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(3, 0) = params2 * (F2_1 * F3_3 - F2_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * -2.0 -
	            params1 * (F2_1 * F3_3 - F2_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(3, 1) = params1 * ((F3_3 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                       (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) +
	            params2 * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
	            F3_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(3, 2) = -params1 * ((F2_3 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                        (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) -
	            params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 -
	            F2_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(3, 3) = params1 * (pow2(F2_1 * F3_3 - F2_3 * F3_1) * 1.0 / pow2(
			F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
			F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) * 2.0 + 2.0) + params2 *
	                                                                pow2(
			                                                                F2_1 *
			                                                                F3_3 -
			                                                                F2_3 *
			                                                                F3_1) * 2.0;
	ddw(3, 4) = params2 * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * -2.0 -
	            params1 * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(3, 5) = params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
	            params1 * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(3, 6) = params2 * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * -2.0 -
	            params1 * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(3, 7) = -params1 * ((F3_1 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                        (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) +
	            params2 * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 -
	            F3_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(3, 8) = params1 * ((F2_1 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                       (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) -
	            params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
	            F2_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(4, 0) = -params1 * ((F3_3 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                        (F1_1 * F3_3 - F1_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) +
	            params2 * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 -
	            F3_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(4, 1) = params2 * (F1_1 * F3_3 - F1_3 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * -2.0 -
	            params1 * (F1_1 * F3_3 - F1_3 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(4, 2) = params1 * ((F1_3 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                       (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) +
	            params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_3 - F1_3 * F3_1) * 2.0 +
	            F1_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(4, 3) = params2 * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * -2.0 -
	            params1 * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(4, 4) = params1 * (pow2(F1_1 * F3_3 - F1_3 * F3_1) * 1.0 / pow2(
			F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
			F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) * 2.0 + 2.0) + params2 *
	                                                                pow2(
			                                                                F1_1 *
			                                                                F3_3 -
			                                                                F1_3 *
			                                                                F3_1) * 2.0;
	ddw(4, 5) = params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * -2.0 -
	            params1 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(4, 6) = params1 * ((F3_1 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                       (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) +
	            params2 * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
	            F3_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(4, 7) = params2 * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_1 * F3_3 - F1_3 * F3_1) * -2.0 -
	            params1 * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(4, 8) = -params1 * ((F1_1 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                        (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) +
	            params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 2.0 -
	            F1_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(5, 0) = params1 * ((F2_3 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                       (F1_1 * F2_3 - F1_3 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) -
	            params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
	            F2_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(5, 1) = -params1 * ((F1_3 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                        (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) +
	            params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 -
	            F1_3 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(5, 2) = params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * -2.0 -
	            params1 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(5, 3) = params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
	            params1 * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(5, 4) = params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * -2.0 -
	            params1 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(5, 5) = params1 * (pow2(F1_1 * F2_3 - F1_3 * F2_1) * 1.0 / pow2(
			F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
			F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) * 2.0 + 2.0) + params2 *
	                                                                pow2(
			                                                                F1_1 *
			                                                                F2_3 -
			                                                                F1_3 *
			                                                                F2_1) * 2.0;
	ddw(5, 6) = -params1 * ((F2_1 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                        (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) -
	            params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 -
	            F2_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(5, 7) = params1 * ((F1_1 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                       (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) +
	            params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 2.0 +
	            F1_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(5, 8) = params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F2_3 - F1_3 * F2_1) * -2.0 -
	            params1 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F2_3 - F1_3 * F2_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(6, 0) = params2 * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
	            params1 * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(6, 1) = -params1 * ((F3_2 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                        (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) -
	            params2 * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 -
	            F3_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(6, 2) = params1 * ((F2_2 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                       (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) +
	            params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
	            F2_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(6, 3) = params2 * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * -2.0 -
	            params1 * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(6, 4) = params1 * ((F3_1 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                       (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) +
	            params2 * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
	            F3_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(6, 5) = -params1 * ((F2_1 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                        (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) -
	            params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 -
	            F2_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(6, 6) = params1 * (pow2(F2_1 * F3_2 - F2_2 * F3_1) * 1.0 / pow2(
			F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
			F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) * 2.0 + 2.0) + params2 *
	                                                                pow2(
			                                                                F2_1 *
			                                                                F3_2 -
			                                                                F2_2 *
			                                                                F3_1) * 2.0;
	ddw(6, 7) = params2 * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * -2.0 -
	            params1 * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(6, 8) = params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
	            params1 * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(7, 0) = params1 * ((F3_2 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                       (F1_1 * F3_2 - F1_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) -
	            params2 * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
	            F3_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(7, 1) = params2 * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 +
	            params1 * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(7, 2) = -params1 * ((F1_2 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                        (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) -
	            params2 * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_2 - F1_2 * F3_1) * 2.0 -
	            F1_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(7, 3) = -params1 * ((F3_1 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                        (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) +
	            params2 * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 -
	            F3_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(7, 4) = params2 * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_1 * F3_3 - F1_3 * F3_1) * -2.0 -
	            params1 * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(7, 5) = params1 * ((F1_1 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
	                       (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) +
	            params2 * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 2.0 +
	            F1_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(7, 6) = params2 * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * -2.0 -
	            params1 * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(7, 7) = params1 * (pow2(F1_1 * F3_2 - F1_2 * F3_1) * 1.0 / pow2(
			F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
			F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) * 2.0 + 2.0) + params2 *
	                                                                pow2(
			                                                                F1_1 *
			                                                                F3_2 -
			                                                                F1_2 *
			                                                                F3_1) * 2.0;
	ddw(7, 8) = params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * -2.0 -
	            params1 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(8, 0) = -params1 * ((F2_2 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                        (F1_1 * F2_2 - F1_2 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) +
	            params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 -
	            F2_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(8, 1) = params1 * ((F1_2 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                       (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) -
	            params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 +
	            F1_2 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(8, 2) = params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 2.0 +
	            params1 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(8, 3) = params1 * ((F2_1 * 2.0) /
	                       (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                       (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
	                       pow2(
			                       F1_1 *
			                       F2_2 *
			                       F3_3 -
			                       F1_1 *
			                       F2_3 *
			                       F3_2 -
			                       F1_2 *
			                       F2_1 *
			                       F3_3 +
			                       F1_2 *
			                       F2_3 *
			                       F3_1 +
			                       F1_3 *
			                       F2_1 *
			                       F3_2 -
			                       F1_3 *
			                       F2_2 *
			                       F3_1) * 2.0) -
	            params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
	            F2_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(8, 4) = -params1 * ((F1_1 * 2.0) /
	                        (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
	                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
	                        (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
	                        pow2(
			                        F1_1 *
			                        F2_2 *
			                        F3_3 -
			                        F1_1 *
			                        F2_3 *
			                        F3_2 -
			                        F1_2 *
			                        F2_1 *
			                        F3_3 +
			                        F1_2 *
			                        F2_3 *
			                        F3_1 +
			                        F1_3 *
			                        F2_1 *
			                        F3_2 -
			                        F1_3 *
			                        F2_2 *
			                        F3_1) * 2.0) +
	            params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 2.0 -
	            F1_1 * params2 * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 -
	                              F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 +
	                              1.0) * 2.0;
	ddw(8, 5) = params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F2_3 - F1_3 * F2_1) * -2.0 -
	            params1 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F2_3 - F1_3 * F2_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(8, 6) = params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
	            params1 * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(8, 7) = params2 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * -2.0 -
	            params1 * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
	            pow2(
			            F1_1 *
			            F2_2 *
			            F3_3 -
			            F1_1 *
			            F2_3 *
			            F3_2 -
			            F1_2 *
			            F2_1 *
			            F3_3 +
			            F1_2 *
			            F2_3 *
			            F3_1 +
			            F1_3 *
			            F2_1 *
			            F3_2 -
			            F1_3 *
			            F2_2 *
			            F3_1) * 2.0;
	ddw(8, 8) = params1 * (pow2(F1_1 * F2_2 - F1_2 * F2_1) * 1.0 / pow2(
			F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
			F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) * 2.0 + 2.0) + params2 *
	                                                                pow2(
			                                                                F1_1 *
			                                                                F2_2 -
			                                                                F1_2 *
			                                                                F2_1) * 2.0;


}
